# Criar um endereco GCP e guarda como variavel
- name: Create GCP address
  google.cloud.gcp_compute_address:
    name: address-ghost
    region: us-central1
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address

# Atualiza as variaveis necessarias para o ghost
- name: Update variables
  set_fact:
    ghost_ip: "{{ address.address }}"
    ghost_port: 80

# Servico para expor o Ghost
- name: Create service Ghost
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: ghost-service # logical name of the service, which will also become the DNS name of the service when it is created.
        namespace: "{{ namespace }}"
        labels:
          app: ghost-service
          tier: application
      spec:
        type: LoadBalancer
        loadBalancerIP: "{{ address.address }}"
        selector:
          app: ghost
        ports:
          - targetPort: "{{ g_port }}" # port that containers are listening on
            port: 80 # port number exposed internally in the cluster
 
# Deployment do pod Ghost
- name: Deployment for Ghost
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ghost
        namespace: "{{ namespace }}"
        labels:
          app: ghost
      spec:
        selector:
          matchLabels:
            app: ghost
        template:
          metadata:
            labels:
              app: ghost
          spec:
            containers:
            - name: ghost
              image: "{{ ghost_version }}"
              env:
              - name: database__connection__database 
                value: "{{ database }}"
              - name: database__connection__user
                value: "{{ database_user }}"
              - name: database__connection__password
                valueFrom:
                  secretKeyRef:
                    name: mysql-secret
                    key: password
              - name: database__connection__host
                value: mysql-service
                url: "http://localhost:{{ mysql_port }}"
              - name: url
                value: "http://{{ ghost_ip }}/"
              - name: mail__transport
                value: SMTP
              - name: mail__options__service
                value: Mailgun
              - name: mail__options__auth__user
                value: "{{ email_mailgun }}"
              - name: mail__options__auth__pass
                valueFrom:
                  secretKeyRef:
                    name: mysql-secret
                    key: passwordMailgun
              ports:
                - containerPort: "{{ g_port }}"   

- name: Get MySQL pod name
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app = mysql
  register: mysql_pod

- name: Wait
  wait_for:
    timeout: 60 

- name: Create a ghost blog admin
  kubernetes.core.k8s_exec:
    namespace: "{{ namespace }}"
    pod: "{{ mysql_pod.resources[0].metadata.name }}"
    command: mysql "{{ database }}" -u"{{ database_user }}" -p"{{ password }}" -e "update users set name='ascn', password='\$2a\$10\$qPAxD1GCmDCkulO/5oxc9eXNpgyDglIAwFPZ5RHSTjzYomCFNex62', email='ascn@example.com', status='active' where id=1;"
  register: admin_created
  until: "admin_created is not failed"
  retries: 6
  delay: 10

- name: Create dashboards (monitoring)
  command: gcloud monitoring dashboards create --config-from-file=roles/deploy_ghost/dashboards/dashboards.json