# Criar um endereco GCP e guarda como variavel
- name: Create GCP address
  google.cloud.gcp_compute_address:
    name: ghostaddress
    region: us-central1
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address

# Atualiza as variaveis necessarias para o ghost
- name: Update variables
  set_fact:
    ghost_ip: "{{ address }}"
    ghost_port: 80

# Cria um namespace
- name: Create namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ namespace }}"
        labels:
          app: "{{ namespace }}"

# Servico para expor o MySQL
- name: Create service MySQL
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: mysql-service # logical name of the service, which will also become the DNS name of the service when it is created.
        namespace: "{{ namespace }}"
        labels:
          app: mysql
          tier: database
      spec:
        selector:
          app: mysql
        ports:
          - port: "{{ mysql_port }}" # port number exposed internally in the cluster

# Criar PVC para o pod do MySQL
- name: Create PVC for MySQL pod
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: mysql-pv-claim
        namespace: "{{ namespace }}"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi


# Deployment do pod MySQL
- name: Deployment for MySQL
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mysql-deployment
        namespace: "{{ namespace }}"
        labels:
          app: mysql
          tier: database
      spec:
        selector:
          matchLabels:
            app: mysql
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app: mysql
              tier: database
          spec:
            containers:
            - name: mysql
              image: mysql:latest
              env: # The variables below could be set on a ConfigMap object
              - name: MYSQL_DATABASE
                value: "{{ database }}"
              - name: MYSQL_USER
                value: "{{ database_user }}"
              - name: MYSQL_PASSWORD
                valueFrom:
                 secretKeyRef:
                  name: mysqlpwd
                  key: password
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                 secretKeyRef:
                  name: mysqlrootpwd
                  key: rootpassword
              ports:
              - containerPort: "{{ mysql_port }}"
              volumeMounts:
              - name: mysql-persistent-storage
                mountPath: /var/lib/mysql
            volumes:
            - name: mysql-persistent-storage
              persistentVolumeClaim:
                claimName: mysql-pv-claim